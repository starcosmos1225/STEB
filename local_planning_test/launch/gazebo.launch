<?xml version="1.0"?>
<launch>
  
  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="true"/>
  <arg name="use_sim_time" default="false"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="true"/>

  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
   <include file="$(find local_planning_test)/launch/myroom_world.launch"> 
     <arg name="world_name" value="$(find local_planning_test)/world/robot.world"/>
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>

  <!-- Load the URDF into the ROS Parameter Server -->
  <arg name="model" />
  <param name="robot_description" 
     command="$(find xacro)/xacro.py $(arg model)" />

  <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
   <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
    args="-urdf -model robot1 -param robot_description -z 0.05"/> 
   
   <node  
      name="keyController"
      pkg="local_planning_test" 
      type="keyboardInput.py"
      output="screen"
      launch-prefix="xterm -e"
   />
   <node  
      name="display"
      pkg="local_planning_test" 
      type="display.py"
      output="screen"
   />
   <node  
      name="press_sensor"
      pkg="local_planning_test" 
      type="press_sensor.py"
      output="screen"
   />
    <node  
      name="emergency_node"
      pkg="local_planning_test" 
      type="emergency.py"
      output="screen"
   />
   <node  
      name="mainController"
      pkg="local_planning_test" 
      type="maincontroller.py"
      output="screen"
   />
</launch>

